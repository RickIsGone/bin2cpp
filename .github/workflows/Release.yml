name: Auto Tag & Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'release tag'
        required: true
        type: string

jobs:
  autotag-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Set tag variable
        run: |
          echo "new_tag=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          echo "version=$(echo "${{ github.event.inputs.tag_name }}" | sed 's/^v//')" >> $GITHUB_ENV

      - name: Create and push tag (if not exists)
        run: |
          if ! git rev-parse ${{ env.new_tag }} >/dev/null 2>&1; then
            git tag ${{ env.new_tag }}
            git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} ${{ env.new_tag }}
          fi

      - name: Download Linux 7z artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-linux-${{ env.version }}.7z
          path: ./
      - name: Download Linux zip artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-linux-${{ env.version }}.zip
          path: ./
      - name: Download Linux tar artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-linux-${{ env.version }}.tar
          path: ./
      - name: Download Windows 7z artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-windows-${{ env.version }}.7z
          path: ./
      - name: Download Windows zip artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-windows-${{ env.version }}.zip
          path: ./
      - name: Download Windows tar artifact
        uses: actions/download-artifact@v4
        with:
          name: bin2cpp-windows-${{ env.version }}.tar
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ env.new_tag }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: false

      - name: Upload Linux 7z Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-linux-${{ env.new_tag }}.7z
          asset_name: bin2cpp-linux-${{ env.new_tag }}.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload Linux zip Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-linux-${{ env.new_tag }}.zip
          asset_name: bin2cpp-linux-${{ env.new_tag }}.zip
          asset_content_type: application/zip

      - name: Upload Linux tar Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-linux-${{ env.new_tag }}.tar
          asset_name: bin2cpp-linux-${{ env.new_tag }}.tar
          asset_content_type: application/x-tar

      - name: Upload Windows 7z Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-windows-${{ env.new_tag }}.7z
          asset_name: bin2cpp-windows-${{ env.new_tag }}.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload Windows zip Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-windows-${{ env.new_tag }}.zip
          asset_name: bin2cpp-windows-${{ env.new_tag }}.zip
          asset_content_type: application/zip

      - name: Upload Windows tar Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin2cpp-windows-${{ env.new_tag }}.tar
          asset_name: bin2cpp-windows-${{ env.new_tag }}.tar
          asset_content_type: application/x-tar